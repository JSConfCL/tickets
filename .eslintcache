[{"/Users/ftorres/Github/jsconf/tickets/src/api/ApolloClient.tsx":"1","/Users/ftorres/Github/jsconf/tickets/src/api/ApolloWrapper.tsx":"2","/Users/ftorres/Github/jsconf/tickets/src/components/Auth/clerk.tsx":"3","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MainNav.tsx":"4","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileLink.tsx":"5","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileNav.tsx":"6","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileNavbarItem.tsx":"7","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/NavbarItem.tsx":"8","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/ThemeSwitcher.tsx":"9","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/types.d.ts":"10","/Users/ftorres/Github/jsconf/tickets/src/components/PageTransition.tsx":"11","/Users/ftorres/Github/jsconf/tickets/src/components/features/LandingPageEvents/graphql/FetchExampleEvents.gql":"12","/Users/ftorres/Github/jsconf/tickets/src/components/features/LandingPageEvents/index.tsx":"13","/Users/ftorres/Github/jsconf/tickets/src/components/footer.tsx":"14","/Users/ftorres/Github/jsconf/tickets/src/components/nav.tsx":"15","/Users/ftorres/Github/jsconf/tickets/src/components/providers.tsx":"16","/Users/ftorres/Github/jsconf/tickets/src/components/ui/button.tsx":"17","/Users/ftorres/Github/jsconf/tickets/src/components/ui/dropdown-menu.tsx":"18","/Users/ftorres/Github/jsconf/tickets/src/components/ui/scroll-area.tsx":"19","/Users/ftorres/Github/jsconf/tickets/src/components/ui/sheet.tsx":"20","/Users/ftorres/Github/jsconf/tickets/src/lib/urls.ts":"21","/Users/ftorres/Github/jsconf/tickets/src/lib/utils.ts":"22"},{"size":701,"mtime":1700447063099,"results":"23","hashOfConfig":"24"},{"size":1707,"mtime":1700447063100,"results":"25","hashOfConfig":"24"},{"size":738,"mtime":1700447063104,"results":"26","hashOfConfig":"24"},{"size":331,"mtime":1700888310192,"results":"27","hashOfConfig":"24"},{"size":650,"mtime":1700888310200,"results":"28","hashOfConfig":"24"},{"size":1683,"mtime":1700888310209,"results":"29","hashOfConfig":"24"},{"size":1179,"mtime":1700889424704,"results":"30","hashOfConfig":"24"},{"size":2219,"mtime":1700890641712,"results":"31","hashOfConfig":"24"},{"size":1383,"mtime":1700888310231,"results":"32","hashOfConfig":"24"},{"size":329,"mtime":1700890586073,"results":"33","hashOfConfig":"24"},{"size":1074,"mtime":1700888310241,"results":"34","hashOfConfig":"24"},{"size":191,"mtime":1700888139282,"results":"35","hashOfConfig":"24"},{"size":349,"mtime":1700447063106,"results":"36","hashOfConfig":"24"},{"size":743,"mtime":1688782157599,"results":"37","hashOfConfig":"24"},{"size":3003,"mtime":1700890633350,"results":"38","hashOfConfig":"24"},{"size":327,"mtime":1700888310243,"results":"39","hashOfConfig":"24"},{"size":1830,"mtime":1700888310250,"results":"40","hashOfConfig":"24"},{"size":7655,"mtime":1700890524949,"results":"41","hashOfConfig":"24"},{"size":1774,"mtime":1700890569035,"results":"42","hashOfConfig":"24"},{"size":4626,"mtime":1700890400367,"results":"43","hashOfConfig":"24"},{"size":101,"mtime":1698508087075,"results":"44","hashOfConfig":"24"},{"size":108,"mtime":1700889755881,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3vzr6n",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"/Users/ftorres/Github/jsconf/tickets/src/api/ApolloClient.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/api/ApolloWrapper.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/Auth/clerk.tsx",["118"],[],"\"use client\";\nimport { ClerkProvider } from \"@clerk/clerk-react\";\nimport React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Clerk = ({ children }: Props) => {\n  return (\n    <ClerkProvider\n      supportEmail=\"contacto@jschile.org\"\n      localization={{\n        locale: \"es-ES\",\n      }}\n      isSatellite={process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === \"true\"}\n      // TODO: Esto no debería existir. Borrarlo cuando deployiemos a producción\n      domain={(url) => {\n        const splitted = url.host.split(\".\");\n        return [splitted.at(-2), splitted.at(-1)].join(\".\");\n      }}\n      publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY!}\n    >\n      {children}\n    </ClerkProvider>\n  );\n};\n","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MainNav.tsx",["119"],[],"import { NavBarProps } from \"./types\";\nimport { NavbarItem } from \"./NavbarItem\";\n\nexport function MainNav({ items }: NavBarProps) {\n  return (\n    <nav className={\"items-center space-x-4 lg:space-x-6\"}>\n      {items.map((item) => (\n        <NavbarItem key={`navbarItem-${item.content}`} item={item} />\n      ))}\n    </nav>\n  );\n}\n","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileLink.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileNav.tsx",["120"],[],"\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { NavBarProps } from \"./types\";\nimport { MobileNavbarItem } from \"./MobileNavbarItem\";\nimport { MobileLink } from \"./MobileLink\";\nimport { Menu, PackageOpen } from \"lucide-react\";\n\nexport function MobileNav({ items }: NavBarProps) {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Sheet open={open} onOpenChange={setOpen}>\n      <SheetTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          className=\"px-0 text-base hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 md:hidden\"\n        >\n          <Menu className=\"h-5 w-5\" />\n          <span className=\"sr-only\">Toggle Menu</span>\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"left\" className=\"pr-0\">\n        <MobileLink\n          href=\"/\"\n          className=\"flex items-center\"\n          onOpenChange={setOpen}\n        >\n          <PackageOpen className=\"h-5 w-5\" />\n        </MobileLink>\n        <ScrollArea className=\"my-4 h-[calc(100vh-8rem)] pb-10 pl-6\">\n          <div className=\"flex flex-col space-y-2\">\n            <div className=\"flex flex-col space-y-3 pt-6\">\n              {items.map((item) => (\n                <MobileNavbarItem\n                  key={`mobile-${item.content}`}\n                  item={item}\n                  setOpen={setOpen}\n                />\n              ))}\n            </div>\n          </div>\n        </ScrollArea>\n      </SheetContent>\n    </Sheet>\n  );\n}\n","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/MobileNavbarItem.tsx",["121"],[],"\"use client\";\n\nimport { NavbarMenuItem } from \"./types\";\nimport { MobileLink } from \"./MobileLink\";\n\nexport const MobileNavbarItem = ({\n  item,\n  setOpen,\n}: {\n  item: NavbarMenuItem;\n  setOpen: (open: boolean) => void;\n}) => {\n  const mobileItemMapper = (item: NavbarMenuItem) => {\n    if (item.link) {\n      return (\n        <MobileLink\n          key={`mobileitem-${item.content}`}\n          href={item.link}\n          onOpenChange={setOpen}\n          className=\"text-muted-foreground\"\n        >\n          {item.content}\n        </MobileLink>\n      );\n    }\n\n    if (item.onClick) {\n      return (\n        <span\n          className=\"cursor-pointer text-muted-foreground\"\n          onClick={item.onClick}\n        >\n          {item.content}\n        </span>\n      );\n    }\n\n    return (\n      <h4 className=\"font-medium text-muted-foreground\">{item.content}</h4>\n    );\n  };\n\n  if (item.children) {\n    return (\n      <>\n        <h4 className=\"font-medium text-muted-foreground\">{item.content}</h4>\n        {item.children\n          .filter((children) => children.content !== \"separator\")\n          .map(mobileItemMapper)}\n      </>\n    );\n  }\n\n  return mobileItemMapper(item);\n};\n","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/NavbarItem.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/ThemeSwitcher.tsx",["122"],[],"\"use client\";\n\nimport * as React from \"react\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport function ThemeSwitcher() {\n  const { setTheme } = useTheme();\n  const themes = [\n    {\n      name: \"Light\",\n      type: \"light\",\n    },\n    {\n      name: \"Dark\",\n      type: \"dark\",\n    },\n    {\n      name: \"System\",\n      type: \"system\",\n    },\n  ];\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] text-foreground rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        {themes.map(({ name, type }) => (\n          <DropdownMenuItem\n            key={name}\n            className=\"cursor-pointer\"\n            onClick={() => setTheme(type)}\n          >\n            {name}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","/Users/ftorres/Github/jsconf/tickets/src/components/Navbar/types.d.ts",["123"],[],"/Users/ftorres/Github/jsconf/tickets/src/components/PageTransition.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/features/LandingPageEvents/graphql/FetchExampleEvents.gql",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/features/LandingPageEvents/index.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/footer.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/nav.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/providers.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/ui/button.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/ui/dropdown-menu.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/ui/scroll-area.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/components/ui/sheet.tsx",[],[],"/Users/ftorres/Github/jsconf/tickets/src/lib/urls.ts",[],[],"/Users/ftorres/Github/jsconf/tickets/src/lib/utils.ts",["124"],[],"import classNames from \"classnames\";\n\nexport function cn(...inputs: any[]) {\n  return classNames(inputs);\n}\n",{"ruleId":"125","severity":1,"message":"126","line":22,"column":23,"nodeType":"127","messageId":"128","endLine":22,"endColumn":69},{"ruleId":"129","severity":2,"message":"130","line":8,"column":40,"nodeType":"131","messageId":"132","endLine":8,"endColumn":52},{"ruleId":"129","severity":2,"message":"130","line":40,"column":34,"nodeType":"131","messageId":"132","endLine":40,"endColumn":46},{"ruleId":"129","severity":2,"message":"130","line":17,"column":30,"nodeType":"131","messageId":"132","endLine":17,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":36,"column":16,"nodeType":"135","messageId":"136","endLine":36,"endColumn":128,"fix":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":3,"column":31,"nodeType":"144","messageId":"145","endLine":3,"endColumn":34,"suggestions":"146"},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/restrict-template-expressions","Invalid type \"string | undefined\" of template literal expression.","MemberExpression","invalidType","tailwindcss/classnames-order","Invalid Tailwind CSS classnames order","JSXAttribute","invalidOrder",{"range":"147","text":"148"},"@typescript-eslint/no-unused-vars","'DropdownMenuSeparatorProps' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["149","150"],[707,807],"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 text-foreground transition-all dark:-rotate-90 dark:scale-0",{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},"suggestUnknown",{"range":"157","text":"158"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"159","text":"160"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[68,71],"unknown",[68,71],"never"]