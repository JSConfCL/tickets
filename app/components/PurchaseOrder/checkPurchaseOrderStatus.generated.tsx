/* eslint-disable @typescript-eslint/ban-ts-comment */
// @ts-nocheck
/* eslint-disable */
/* prettier-ignore */
/* This file is automatically generated. Please do not modify it manually. */
import * as Types from '../../api/gql/graphql';

import { gql } from "graphql-tag";
import * as Apollo from "@apollo/client";
const defaultOptions = {} as const;
export type CheckPurchaseOrderStatusMutationVariables = Types.Exact<{
  input: Types.CheckForPurchaseOrderInput;
}>;

export type CheckPurchaseOrderStatusMutation = {
  __typename?: "Mutation";
  checkPurchaseOrderStatus: {
    __typename?: "PurchaseOrder";
    status?: Types.PurchaseOrderStatusEnum | null;
    tickets: Array<{
      __typename?: "UserTicket";
      approvalStatus: Types.TicketApprovalStatus;
      paymentStatus: Types.TicketPaymentStatus;
      redemptionStatus: Types.TicketRedemptionStatus;
    }>;
  };
};

export const CheckPurchaseOrderStatusDocument = gql`
  mutation CheckPurchaseOrderStatus($input: CheckForPurchaseOrderInput!) {
    checkPurchaseOrderStatus(input: $input) {
      status
      tickets {
        approvalStatus
        paymentStatus
        redemptionStatus
      }
    }
  }
`;
export type CheckPurchaseOrderStatusMutationFn = Apollo.MutationFunction<
  CheckPurchaseOrderStatusMutation,
  CheckPurchaseOrderStatusMutationVariables
>;

/**
 * __useCheckPurchaseOrderStatusMutation__
 *
 * To run a mutation, you first call `useCheckPurchaseOrderStatusMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCheckPurchaseOrderStatusMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [checkPurchaseOrderStatusMutation, { data, loading, error }] = useCheckPurchaseOrderStatusMutation({
 *   variables: {
 *      input: // value for 'input'
 *   },
 * });
 */
export function useCheckPurchaseOrderStatusMutation(
  baseOptions?: Apollo.MutationHookOptions<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >(CheckPurchaseOrderStatusDocument, options);
}
export type CheckPurchaseOrderStatusMutationHookResult = ReturnType<
  typeof useCheckPurchaseOrderStatusMutation
>;
export type CheckPurchaseOrderStatusMutationResult =
  Apollo.MutationResult<CheckPurchaseOrderStatusMutation>;
export type CheckPurchaseOrderStatusMutationOptions =
  Apollo.BaseMutationOptions<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >;
