/* eslint-disable @typescript-eslint/ban-ts-comment */
// @ts-nocheck
/* eslint-disable */
/* prettier-ignore */
/* This file is automatically generated. Please do not modify it manually. */
import * as Types from '../../../api/gql/graphql';

import { gql } from "graphql-tag";
import * as Apollo from "@apollo/client";
const defaultOptions = {} as const;
export type CheckPurchaseOrderStatusMutationVariables = Types.Exact<{
  input: Types.CheckForPurchaseOrderInput;
}>;

export type CheckPurchaseOrderStatusMutation = {
  __typename?: "Mutation";
  checkPurchaseOrderStatus: {
    __typename?: "PurchaseOrder";
    id: string;
    paymentLink?: string | null;
    status?: Types.PurchaseOrderStatusEnum | null;
    finalPrice?: number | null;
    paymentPlatform?: string | null;
    createdAt?: any | null;
    publicId?: string | null;
    currency?: {
      __typename?: "AllowedCurrency";
      id: string;
      currency: string;
    } | null;
    tickets: Array<{
      __typename?: "UserTicket";
      id: string;
      approvalStatus: Types.TicketApprovalStatus;
      paymentStatus?: Types.PurchaseOrderPaymentStatusEnum | null;
      redemptionStatus: Types.TicketRedemptionStatus;
      publicId: string;
      ticketTemplate: {
        __typename?: "Ticket";
        id: string;
        name: string;
        description?: string | null;
        isFree: boolean;
        event: {
          __typename?: "Event";
          id: string;
          name: string;
          address?: string | null;
          description?: string | null;
          startDateTime: any;
          endDateTime?: any | null;
          status: Types.EventStatus;
          publicShareURL?: string | null;
          logoImage?: { __typename?: "Image"; url: string } | null;
          community?: { __typename?: "Community"; name?: string | null } | null;
        };
        prices?: Array<{
          __typename?: "Price";
          id: string;
          amount: number;
          currency: {
            __typename?: "AllowedCurrency";
            currency: string;
            id: string;
          };
        }> | null;
      };
    }>;
  };
};

export const CheckPurchaseOrderStatusDocument = gql`
  mutation CheckPurchaseOrderStatus($input: CheckForPurchaseOrderInput!) {
    checkPurchaseOrderStatus(input: $input) {
      id
      paymentLink
      status
      finalPrice
      paymentPlatform
      createdAt
      publicId
      currency {
        id
        currency
      }
      tickets {
        id
        approvalStatus
        paymentStatus
        redemptionStatus
        publicId
        ticketTemplate {
          id
          name
          description
          isFree
          event {
            id
            name
            address
            description
            startDateTime
            endDateTime
            status
            publicShareURL
            logoImage {
              url
            }
            community {
              name
            }
          }
          prices {
            id
            amount
            currency {
              currency
              id
            }
          }
        }
      }
    }
  }
`;
export type CheckPurchaseOrderStatusMutationFn = Apollo.MutationFunction<
  CheckPurchaseOrderStatusMutation,
  CheckPurchaseOrderStatusMutationVariables
>;

/**
 * __useCheckPurchaseOrderStatusMutation__
 *
 * To run a mutation, you first call `useCheckPurchaseOrderStatusMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCheckPurchaseOrderStatusMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [checkPurchaseOrderStatusMutation, { data, loading, error }] = useCheckPurchaseOrderStatusMutation({
 *   variables: {
 *      input: // value for 'input'
 *   },
 * });
 */
export function useCheckPurchaseOrderStatusMutation(
  baseOptions?: Apollo.MutationHookOptions<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >(CheckPurchaseOrderStatusDocument, options);
}
export type CheckPurchaseOrderStatusMutationHookResult = ReturnType<
  typeof useCheckPurchaseOrderStatusMutation
>;
export type CheckPurchaseOrderStatusMutationResult =
  Apollo.MutationResult<CheckPurchaseOrderStatusMutation>;
export type CheckPurchaseOrderStatusMutationOptions =
  Apollo.BaseMutationOptions<
    CheckPurchaseOrderStatusMutation,
    CheckPurchaseOrderStatusMutationVariables
  >;
